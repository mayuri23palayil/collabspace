{"ast":null,"code":"import _classCallCheck from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Polling } from \"./polling.js\";\n/**\n * HTTP long-polling based on the built-in `fetch()` method.\n *\n * Usage: browser, Node.js (since v18), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/fetch\n * @see https://caniuse.com/fetch\n * @see https://nodejs.org/api/globals.html#fetch\n */\n\nexport var Fetch = /*#__PURE__*/function (_Polling) {\n  _inherits(Fetch, _Polling);\n\n  var _super = _createSuper(Fetch);\n\n  function Fetch() {\n    _classCallCheck(this, Fetch);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Fetch, [{\n    key: \"doPoll\",\n    value: function doPoll() {\n      var _this = this;\n\n      this._fetch().then(function (res) {\n        if (!res.ok) {\n          return _this.onError(\"fetch read error\", res.status, res);\n        }\n\n        res.text().then(function (data) {\n          return _this.onData(data);\n        });\n      }).catch(function (err) {\n        _this.onError(\"fetch read error\", err);\n      });\n    }\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, callback) {\n      var _this2 = this;\n\n      this._fetch(data).then(function (res) {\n        if (!res.ok) {\n          return _this2.onError(\"fetch write error\", res.status, res);\n        }\n\n        callback();\n      }).catch(function (err) {\n        _this2.onError(\"fetch write error\", err);\n      });\n    }\n  }, {\n    key: \"_fetch\",\n    value: function _fetch(data) {\n      var _this3 = this;\n\n      var _a;\n\n      var isPost = data !== undefined;\n      var headers = new Headers(this.opts.extraHeaders);\n\n      if (isPost) {\n        headers.set(\"content-type\", \"text/plain;charset=UTF-8\");\n      }\n\n      (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.appendCookies(headers);\n      return fetch(this.uri(), {\n        method: isPost ? \"POST\" : \"GET\",\n        body: isPost ? data : null,\n        headers: headers,\n        credentials: this.opts.withCredentials ? \"include\" : \"omit\"\n      }).then(function (res) {\n        var _a; // @ts-ignore getSetCookie() was added in Node.js v19.7.0\n\n\n        (_a = _this3.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(res.headers.getSetCookie());\n        return res;\n      });\n    }\n  }]);\n\n  return Fetch;\n}(Polling);","map":{"version":3,"sources":["C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/engine.io-client/build/esm/transports/polling-fetch.js"],"names":["Polling","Fetch","_fetch","then","res","ok","onError","status","text","data","onData","catch","err","callback","_a","isPost","undefined","headers","Headers","opts","extraHeaders","set","socket","_cookieJar","appendCookies","fetch","uri","method","body","credentials","withCredentials","parseCookies","getSetCookie"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAaC,KAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,kBAAS;AAAA;;AACL,WAAKC,MAAL,GACKC,IADL,CACU,UAACC,GAAD,EAAS;AACf,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,iBAAO,KAAI,CAACC,OAAL,CAAa,kBAAb,EAAiCF,GAAG,CAACG,MAArC,EAA6CH,GAA7C,CAAP;AACH;;AACDA,QAAAA,GAAG,CAACI,IAAJ,GAAWL,IAAX,CAAgB,UAACM,IAAD;AAAA,iBAAU,KAAI,CAACC,MAAL,CAAYD,IAAZ,CAAV;AAAA,SAAhB;AACH,OAND,EAOKE,KAPL,CAOW,UAACC,GAAD,EAAS;AAChB,QAAA,KAAI,CAACN,OAAL,CAAa,kBAAb,EAAiCM,GAAjC;AACH,OATD;AAUH;AAZL;AAAA;AAAA,WAaI,iBAAQH,IAAR,EAAcI,QAAd,EAAwB;AAAA;;AACpB,WAAKX,MAAL,CAAYO,IAAZ,EACKN,IADL,CACU,UAACC,GAAD,EAAS;AACf,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,iBAAO,MAAI,CAACC,OAAL,CAAa,mBAAb,EAAkCF,GAAG,CAACG,MAAtC,EAA8CH,GAA9C,CAAP;AACH;;AACDS,QAAAA,QAAQ;AACX,OAND,EAOKF,KAPL,CAOW,UAACC,GAAD,EAAS;AAChB,QAAA,MAAI,CAACN,OAAL,CAAa,mBAAb,EAAkCM,GAAlC;AACH,OATD;AAUH;AAxBL;AAAA;AAAA,WAyBI,gBAAOH,IAAP,EAAa;AAAA;;AACT,UAAIK,EAAJ;;AACA,UAAMC,MAAM,GAAGN,IAAI,KAAKO,SAAxB;AACA,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,KAAKC,IAAL,CAAUC,YAAtB,CAAhB;;AACA,UAAIL,MAAJ,EAAY;AACRE,QAAAA,OAAO,CAACI,GAAR,CAAY,cAAZ,EAA4B,0BAA5B;AACH;;AACD,OAACP,EAAE,GAAG,KAAKQ,MAAL,CAAYC,UAAlB,MAAkC,IAAlC,IAA0CT,EAAE,KAAK,KAAK,CAAtD,GAA0D,KAAK,CAA/D,GAAmEA,EAAE,CAACU,aAAH,CAAiBP,OAAjB,CAAnE;AACA,aAAOQ,KAAK,CAAC,KAAKC,GAAL,EAAD,EAAa;AACrBC,QAAAA,MAAM,EAAEZ,MAAM,GAAG,MAAH,GAAY,KADL;AAErBa,QAAAA,IAAI,EAAEb,MAAM,GAAGN,IAAH,GAAU,IAFD;AAGrBQ,QAAAA,OAAO,EAAPA,OAHqB;AAIrBY,QAAAA,WAAW,EAAE,KAAKV,IAAL,CAAUW,eAAV,GAA4B,SAA5B,GAAwC;AAJhC,OAAb,CAAL,CAKJ3B,IALI,CAKC,UAACC,GAAD,EAAS;AACb,YAAIU,EAAJ,CADa,CAEb;;;AACA,SAACA,EAAE,GAAG,MAAI,CAACQ,MAAL,CAAYC,UAAlB,MAAkC,IAAlC,IAA0CT,EAAE,KAAK,KAAK,CAAtD,GAA0D,KAAK,CAA/D,GAAmEA,EAAE,CAACiB,YAAH,CAAgB3B,GAAG,CAACa,OAAJ,CAAYe,YAAZ,EAAhB,CAAnE;AACA,eAAO5B,GAAP;AACH,OAVM,CAAP;AAWH;AA5CL;;AAAA;AAAA,EAA2BJ,OAA3B","sourcesContent":["import { Polling } from \"./polling.js\";\n/**\n * HTTP long-polling based on the built-in `fetch()` method.\n *\n * Usage: browser, Node.js (since v18), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/fetch\n * @see https://caniuse.com/fetch\n * @see https://nodejs.org/api/globals.html#fetch\n */\nexport class Fetch extends Polling {\n    doPoll() {\n        this._fetch()\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch read error\", res.status, res);\n            }\n            res.text().then((data) => this.onData(data));\n        })\n            .catch((err) => {\n            this.onError(\"fetch read error\", err);\n        });\n    }\n    doWrite(data, callback) {\n        this._fetch(data)\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch write error\", res.status, res);\n            }\n            callback();\n        })\n            .catch((err) => {\n            this.onError(\"fetch write error\", err);\n        });\n    }\n    _fetch(data) {\n        var _a;\n        const isPost = data !== undefined;\n        const headers = new Headers(this.opts.extraHeaders);\n        if (isPost) {\n            headers.set(\"content-type\", \"text/plain;charset=UTF-8\");\n        }\n        (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.appendCookies(headers);\n        return fetch(this.uri(), {\n            method: isPost ? \"POST\" : \"GET\",\n            body: isPost ? data : null,\n            headers,\n            credentials: this.opts.withCredentials ? \"include\" : \"omit\",\n        }).then((res) => {\n            var _a;\n            // @ts-ignore getSetCookie() was added in Node.js v19.7.0\n            (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(res.headers.getSetCookie());\n            return res;\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}