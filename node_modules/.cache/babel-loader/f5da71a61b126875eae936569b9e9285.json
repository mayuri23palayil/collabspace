{"ast":null,"code":"import _assertThisInitialized from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _createClass from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport var TransportError = /*#__PURE__*/function (_Error) {\n  _inherits(TransportError, _Error);\n\n  var _super = _createSuper(TransportError);\n\n  function TransportError(reason, description, context) {\n    var _this;\n\n    _classCallCheck(this, TransportError);\n\n    _this = _super.call(this, reason);\n    _this.description = description;\n    _this.context = context;\n    _this.type = \"TransportError\";\n    return _this;\n  }\n\n  return _createClass(TransportError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexport var Transport = /*#__PURE__*/function (_Emitter) {\n  _inherits(Transport, _Emitter);\n\n  var _super2 = _createSuper(Transport);\n\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} opts - options\n   * @protected\n   */\n  function Transport(opts) {\n    var _this2;\n\n    _classCallCheck(this, Transport);\n\n    _this2 = _super2.call(this);\n    _this2.writable = false;\n    installTimerFunctions(_assertThisInitialized(_this2), opts);\n    _this2.opts = opts;\n    _this2.query = opts.query;\n    _this2.socket = opts.socket;\n    _this2.supportsBinary = !opts.forceBase64;\n    return _this2;\n  }\n  /**\n   * Emits an error.\n   *\n   * @param {String} reason\n   * @param description\n   * @param context - the error context\n   * @return {Transport} for chaining\n   * @protected\n   */\n\n\n  _createClass(Transport, [{\n    key: \"onError\",\n    value: function onError(reason, description, context) {\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"error\", new TransportError(reason, description, context));\n\n      return this;\n    }\n    /**\n     * Opens the transport.\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.readyState = \"opening\";\n      this.doOpen();\n      return this;\n    }\n    /**\n     * Closes the transport.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.readyState === \"opening\" || this.readyState === \"open\") {\n        this.doClose();\n        this.onClose();\n      }\n\n      return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(packets) {\n      if (this.readyState === \"open\") {\n        this.write(packets);\n      } else {// this might happen if the transport was silently closed in the beforeunload event handler\n      }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen() {\n      this.readyState = \"open\";\n      this.writable = true;\n\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      var packet = decodePacket(data, this.socket.binaryType);\n      this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"onPacket\",\n    value: function onPacket(packet) {\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"onClose\",\n    value: function onClose(details) {\n      this.readyState = \"closed\";\n\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause(onPause) {}\n  }, {\n    key: \"createUri\",\n    value: function createUri(schema) {\n      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return schema + \"://\" + this._hostname() + this._port() + this.opts.path + this._query(query);\n    }\n  }, {\n    key: \"_hostname\",\n    value: function _hostname() {\n      var hostname = this.opts.hostname;\n      return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n  }, {\n    key: \"_port\",\n    value: function _port() {\n      if (this.opts.port && (this.opts.secure && Number(this.opts.port !== 443) || !this.opts.secure && Number(this.opts.port) !== 80)) {\n        return \":\" + this.opts.port;\n      } else {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"_query\",\n    value: function _query(query) {\n      var encodedQuery = encode(query);\n      return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n  }]);\n\n  return Transport;\n}(Emitter);","map":{"version":3,"sources":["C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/engine.io-client/build/esm/transport.js"],"names":["decodePacket","Emitter","installTimerFunctions","encode","TransportError","reason","description","context","type","Error","Transport","opts","writable","query","socket","supportsBinary","forceBase64","readyState","doOpen","doClose","onClose","packets","write","data","packet","binaryType","onPacket","details","onPause","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","length"],"mappings":"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","sourcesContent":["import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n"]},"metadata":{},"sourceType":"module"}