{"ast":null,"code":"import _classCallCheck from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\"; // detect ReactNative environment\n\nvar isReactNative = typeof navigator !== \"undefined\" && typeof navigator.product === \"string\" && navigator.product.toLowerCase() === \"reactnative\";\nexport var BaseWS = /*#__PURE__*/function (_Transport) {\n  _inherits(BaseWS, _Transport);\n\n  var _super = _createSuper(BaseWS);\n\n  function BaseWS() {\n    _classCallCheck(this, BaseWS);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BaseWS, [{\n    key: \"name\",\n    get: function get() {\n      return \"websocket\";\n    }\n  }, {\n    key: \"doOpen\",\n    value: function doOpen() {\n      var uri = this.uri();\n      var protocols = this.opts.protocols; // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n\n      var opts = isReactNative ? {} : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n\n      if (this.opts.extraHeaders) {\n        opts.headers = this.opts.extraHeaders;\n      }\n\n      try {\n        this.ws = this.createSocket(uri, protocols, opts);\n      } catch (err) {\n        return this.emitReserved(\"error\", err);\n      }\n\n      this.ws.binaryType = this.socket.binaryType;\n      this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n\n  }, {\n    key: \"addEventListeners\",\n    value: function addEventListeners() {\n      var _this = this;\n\n      this.ws.onopen = function () {\n        if (_this.opts.autoUnref) {\n          _this.ws._socket.unref();\n        }\n\n        _this.onOpen();\n      };\n\n      this.ws.onclose = function (closeEvent) {\n        return _this.onClose({\n          description: \"websocket connection closed\",\n          context: closeEvent\n        });\n      };\n\n      this.ws.onmessage = function (ev) {\n        return _this.onData(ev.data);\n      };\n\n      this.ws.onerror = function (e) {\n        return _this.onError(\"websocket error\", e);\n      };\n    }\n  }, {\n    key: \"write\",\n    value: function write(packets) {\n      var _this2 = this;\n\n      this.writable = false; // encodePacket efficient as it uses WS framing\n      // no need for encodePayload\n\n      var _loop = function _loop(i) {\n        var packet = packets[i];\n        var lastPacket = i === packets.length - 1;\n        encodePacket(packet, _this2.supportsBinary, function (data) {\n          // Sometimes the websocket has already been closed but the browser didn't\n          // have a chance of informing us about it yet, in that case send will\n          // throw an error\n          try {\n            _this2.doWrite(packet, data);\n          } catch (e) {}\n\n          if (lastPacket) {\n            // fake drain\n            // defer to next tick to allow Socket to clear writeBuffer\n            nextTick(function () {\n              _this2.writable = true;\n\n              _this2.emitReserved(\"drain\");\n            }, _this2.setTimeoutFn);\n          }\n        });\n      };\n\n      for (var i = 0; i < packets.length; i++) {\n        _loop(i);\n      }\n    }\n  }, {\n    key: \"doClose\",\n    value: function doClose() {\n      if (typeof this.ws !== \"undefined\") {\n        this.ws.close();\n        this.ws = null;\n      }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"uri\",\n    value: function uri() {\n      var schema = this.opts.secure ? \"wss\" : \"ws\";\n      var query = this.query || {}; // append timestamp to URI\n\n      if (this.opts.timestampRequests) {\n        query[this.opts.timestampParam] = randomString();\n      } // communicate binary support capabilities\n\n\n      if (!this.supportsBinary) {\n        query.b64 = 1;\n      }\n\n      return this.createUri(schema, query);\n    }\n  }]);\n\n  return BaseWS;\n}(Transport);\nvar WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\n\nexport var WS = /*#__PURE__*/function (_BaseWS) {\n  _inherits(WS, _BaseWS);\n\n  var _super2 = _createSuper(WS);\n\n  function WS() {\n    _classCallCheck(this, WS);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(WS, [{\n    key: \"createSocket\",\n    value: function createSocket(uri, protocols, opts) {\n      return !isReactNative ? protocols ? new WebSocketCtor(uri, protocols) : new WebSocketCtor(uri) : new WebSocketCtor(uri, protocols, opts);\n    }\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(_packet, data) {\n      this.ws.send(data);\n    }\n  }]);\n\n  return WS;\n}(BaseWS);","map":{"version":3,"sources":["C:/Users/mayur/Downloads/realtime-code-editor-main/realtime-code-editor-main/node_modules/engine.io-client/build/esm/transports/websocket.js"],"names":["Transport","pick","randomString","encodePacket","globalThisShim","globalThis","nextTick","isReactNative","navigator","product","toLowerCase","BaseWS","uri","protocols","opts","extraHeaders","headers","ws","createSocket","err","emitReserved","binaryType","socket","addEventListeners","onopen","autoUnref","_socket","unref","onOpen","onclose","closeEvent","onClose","description","context","onmessage","ev","onData","data","onerror","e","onError","packets","writable","i","packet","lastPacket","length","supportsBinary","doWrite","setTimeoutFn","close","schema","secure","query","timestampRequests","timestampParam","b64","createUri","WebSocketCtor","WebSocket","MozWebSocket","WS","_packet","send"],"mappings":"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","sourcesContent":["import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}